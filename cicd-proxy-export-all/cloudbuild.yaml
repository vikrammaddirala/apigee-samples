steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'Download Proxy Bundle'
  args:
    - 'run'
    - '--rm'
    - '-v'
    - '/workspace:/workspace'
    - 'alpine'
    - '/bin/sh'
    - '-c'
    - |
      apk add --no-cache curl
      curl -o /workspace/proxies.zip https://storage.googleapis.com/proxy-storage-01/proxies.zip

- name: 'ubuntu'
  id: 'Verify Download'
  args: ['sha256sum', '/workspace/proxies.zip']

- name: 'ubuntu'
  id: 'Install dependencies'
  args:
    - '/bin/sh'
    - '-c'
    - |
      apt-get update
      apt-get install -y unzip jq

- name: 'ubuntu'
  id: 'Unzip Proxy Bundle'
  args: ['unzip', '-o', '/workspace/proxies.zip', '-d', '/workspace']

- name: 'ubuntu'
  id: 'Read and parse proxies.json'
  entrypoint: 'jq'
  args: ['.', '/workspace/proxies.json']
  waitFor: ['Install dependencies', 'Unzip Proxy Bundle']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
  id: 'Deploy Proxies'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      for proxy in $(jq -r '.proxies | keys[]' /workspace/proxies.json); do
        echo "Deploying ${proxy}"
        if gcloud alpha apigee apis describe ${proxy} --organization='apigee-x-379708'; then
          echo "API ${proxy} already exists"
        else
          gcloud alpha apigee apis create ${proxy} --organization='apigee-x-379708'
        fi
        gcloud alpha apigee apis deploy ${proxy} --environment='test-env' --source=$(jq -r ".proxies[${proxy}].directory" /workspace/proxies.json)
      done
  waitFor: ['Read and parse proxies.json']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
  id: 'Clean up'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      rm -rf /workspace/proxies.zip
      find /workspace -mindepth 1 -maxdepth 1 -type d -exec rm -rf {} +
  waitFor: ['Deploy Proxies']

timeout: 1200s
