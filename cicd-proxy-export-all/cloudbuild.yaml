steps:
  # Step 1: Generate access token and store it in a variable
  - name: 'gcr.io/cloud-builders/gcloud'
    id: variables
    entrypoint: 'bash'
    args:
      - -c
      - |
        export build_token=\"$(gcloud auth application-default print-access-token)\"
        env | grep "^build_" > /workspace/build_vars

  # Step 2: Export and deploy each proxy
  - name: 'gcr.io/cloud-builders/curl'
    id: export-deploy
    entrypoint: 'bash'
    env:
      - "build_token=${build_token}"
    args:
      - -c
      - |
        # Define the list of proxies
        proxies=("FirstTemplateProxy" "generateReport" "GetAttachmentLists")
        
        # Define your Apigee organization and environments
        _ORG="apigee-x-379708"
        _DEV_ENV="default-dev"
        _TEST_ENV="test-env"

        for proxy in "${proxies[@]}"; do
          echo "Processing proxy: $proxy"

          # Export the proxy
          _EXPORT_URL="https://apigee.googleapis.com/v1/organizations/$_ORG/apis/$proxy/revisions/1?format=bundle"
          curl -X GET "$_EXPORT_URL" -H "Authorization: Bearer $build_token" -o "/workspace/$proxy.zip"

          # Import and deploy to test environment
          _IMPORT_URL="https://apigee.googleapis.com/v1/organizations/$_ORG/environments/$_TEST_ENV/apis?action=import&name=$proxy"
          curl -X POST "$_IMPORT_URL" -H "Authorization: Bearer $build_token" -H "Content-Type: multipart/form-data" -F "file=@/workspace/$proxy.zip"
          
          # Extract revision number from the proxy bundle
          _REVISION=$(unzip -p "/workspace/$proxy.zip" apiproxy/*.xml | grep -oP '(?<=<Version>)[^<]+')
          _DEPLOY_URL="https://apigee.googleapis.com/v1/organizations/$_ORG/environments/$_TEST_ENV/apis/$proxy/revisions/$_REVISION/deployments"
          curl -X POST "$_DEPLOY_URL" -H "Authorization: Bearer $build_token"
        done

# Define substitutions (modify as needed)
substitutions:
  _ENV: 'default-dev'
  _TARGET_ENV: 'test-env'
  _ORG: 'apigee-x-379708'

# Define timeout (optional)
timeout: '1200s'
